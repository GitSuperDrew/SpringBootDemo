/*
 * This file is generated by jOOQ.
 */
package com.study.module.springbootjooq.generate.tables.records;


import com.study.module.springbootjooq.generate.tables.PdmanDbVersion;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdmanDbVersionRecord extends TableRecordImpl<PdmanDbVersionRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 581587330;

    /**
     * Setter for <code>zero.pdman_db_version.DB_VERSION</code>.
     */
    public void setDbVersion(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zero.pdman_db_version.DB_VERSION</code>.
     */
    public String getDbVersion() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zero.pdman_db_version.VERSION_DESC</code>.
     */
    public void setVersionDesc(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zero.pdman_db_version.VERSION_DESC</code>.
     */
    public String getVersionDesc() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zero.pdman_db_version.CREATED_TIME</code>.
     */
    public void setCreatedTime(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>zero.pdman_db_version.CREATED_TIME</code>.
     */
    public String getCreatedTime() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PdmanDbVersion.PDMAN_DB_VERSION.DB_VERSION;
    }

    @Override
    public Field<String> field2() {
        return PdmanDbVersion.PDMAN_DB_VERSION.VERSION_DESC;
    }

    @Override
    public Field<String> field3() {
        return PdmanDbVersion.PDMAN_DB_VERSION.CREATED_TIME;
    }

    @Override
    public String component1() {
        return getDbVersion();
    }

    @Override
    public String component2() {
        return getVersionDesc();
    }

    @Override
    public String component3() {
        return getCreatedTime();
    }

    @Override
    public String value1() {
        return getDbVersion();
    }

    @Override
    public String value2() {
        return getVersionDesc();
    }

    @Override
    public String value3() {
        return getCreatedTime();
    }

    @Override
    public PdmanDbVersionRecord value1(String value) {
        setDbVersion(value);
        return this;
    }

    @Override
    public PdmanDbVersionRecord value2(String value) {
        setVersionDesc(value);
        return this;
    }

    @Override
    public PdmanDbVersionRecord value3(String value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public PdmanDbVersionRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PdmanDbVersionRecord
     */
    public PdmanDbVersionRecord() {
        super(PdmanDbVersion.PDMAN_DB_VERSION);
    }

    /**
     * Create a detached, initialised PdmanDbVersionRecord
     */
    public PdmanDbVersionRecord(String dbVersion, String versionDesc, String createdTime) {
        super(PdmanDbVersion.PDMAN_DB_VERSION);

        set(0, dbVersion);
        set(1, versionDesc);
        set(2, createdTime);
    }
}
