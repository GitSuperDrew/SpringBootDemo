/*
 * This file is generated by jOOQ.
 */
package com.study.module.springbootjooq.generate.tables.records;


import com.study.module.springbootjooq.generate.tables.Student;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record5<Integer, String, Integer, String, Integer> {

    private static final long serialVersionUID = 234306298;

    /**
     * Setter for <code>zero.student.stu_id</code>. 学生ID，主键
     */
    public void setStuId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>zero.student.stu_id</code>. 学生ID，主键
     */
    public Integer getStuId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>zero.student.stu_name</code>. 学生姓名
     */
    public void setStuName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zero.student.stu_name</code>. 学生姓名
     */
    public String getStuName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zero.student.stu_age</code>. 学生年龄
     */
    public void setStuAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>zero.student.stu_age</code>. 学生年龄
     */
    public Integer getStuAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>zero.student.stu_sex</code>. 学生性别（0：未知，1：男，2：女）
     */
    public void setStuSex(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>zero.student.stu_sex</code>. 学生性别（0：未知，1：男，2：女）
     */
    public String getStuSex() {
        return (String) get(3);
    }

    /**
     * Setter for <code>zero.student.deleted</code>. 逻辑删除标识（0：有效数据，1：无效数据）
     */
    public void setDeleted(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>zero.student.deleted</code>. 逻辑删除标识（0：有效数据，1：无效数据）
     */
    public Integer getDeleted() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Integer, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Student.STUDENT.STU_ID;
    }

    @Override
    public Field<String> field2() {
        return Student.STUDENT.STU_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Student.STUDENT.STU_AGE;
    }

    @Override
    public Field<String> field4() {
        return Student.STUDENT.STU_SEX;
    }

    @Override
    public Field<Integer> field5() {
        return Student.STUDENT.DELETED;
    }

    @Override
    public Integer component1() {
        return getStuId();
    }

    @Override
    public String component2() {
        return getStuName();
    }

    @Override
    public Integer component3() {
        return getStuAge();
    }

    @Override
    public String component4() {
        return getStuSex();
    }

    @Override
    public Integer component5() {
        return getDeleted();
    }

    @Override
    public Integer value1() {
        return getStuId();
    }

    @Override
    public String value2() {
        return getStuName();
    }

    @Override
    public Integer value3() {
        return getStuAge();
    }

    @Override
    public String value4() {
        return getStuSex();
    }

    @Override
    public Integer value5() {
        return getDeleted();
    }

    @Override
    public StudentRecord value1(Integer value) {
        setStuId(value);
        return this;
    }

    @Override
    public StudentRecord value2(String value) {
        setStuName(value);
        return this;
    }

    @Override
    public StudentRecord value3(Integer value) {
        setStuAge(value);
        return this;
    }

    @Override
    public StudentRecord value4(String value) {
        setStuSex(value);
        return this;
    }

    @Override
    public StudentRecord value5(Integer value) {
        setDeleted(value);
        return this;
    }

    @Override
    public StudentRecord values(Integer value1, String value2, Integer value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentRecord
     */
    public StudentRecord() {
        super(Student.STUDENT);
    }

    /**
     * Create a detached, initialised StudentRecord
     */
    public StudentRecord(Integer stuId, String stuName, Integer stuAge, String stuSex, Integer deleted) {
        super(Student.STUDENT);

        set(0, stuId);
        set(1, stuName);
        set(2, stuAge);
        set(3, stuSex);
        set(4, deleted);
    }
}
