/*
 * This file is generated by jOOQ.
 */
package edu.study.module.springbootjooq.generate.tables;


import edu.study.module.springbootjooq.generate.Zero;
import edu.study.module.springbootjooq.generate.tables.records.PdmanDbVersionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PdmanDbVersion extends TableImpl<PdmanDbVersionRecord> {

    private static final long serialVersionUID = -283414476;

    /**
     * The reference instance of <code>zero.pdman_db_version</code>
     */
    public static final PdmanDbVersion PDMAN_DB_VERSION = new PdmanDbVersion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PdmanDbVersionRecord> getRecordType() {
        return PdmanDbVersionRecord.class;
    }

    /**
     * The column <code>zero.pdman_db_version.DB_VERSION</code>.
     */
    public final TableField<PdmanDbVersionRecord, String> DB_VERSION = createField(DSL.name("DB_VERSION"), org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>zero.pdman_db_version.VERSION_DESC</code>.
     */
    public final TableField<PdmanDbVersionRecord, String> VERSION_DESC = createField(DSL.name("VERSION_DESC"), org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>zero.pdman_db_version.CREATED_TIME</code>.
     */
    public final TableField<PdmanDbVersionRecord, String> CREATED_TIME = createField(DSL.name("CREATED_TIME"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * Create a <code>zero.pdman_db_version</code> table reference
     */
    public PdmanDbVersion() {
        this(DSL.name("pdman_db_version"), null);
    }

    /**
     * Create an aliased <code>zero.pdman_db_version</code> table reference
     */
    public PdmanDbVersion(String alias) {
        this(DSL.name(alias), PDMAN_DB_VERSION);
    }

    /**
     * Create an aliased <code>zero.pdman_db_version</code> table reference
     */
    public PdmanDbVersion(Name alias) {
        this(alias, PDMAN_DB_VERSION);
    }

    private PdmanDbVersion(Name alias, Table<PdmanDbVersionRecord> aliased) {
        this(alias, aliased, null);
    }

    private PdmanDbVersion(Name alias, Table<PdmanDbVersionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PdmanDbVersion(Table<O> child, ForeignKey<O, PdmanDbVersionRecord> key) {
        super(child, key, PDMAN_DB_VERSION);
    }

    @Override
    public Schema getSchema() {
        return Zero.ZERO;
    }

    @Override
    public PdmanDbVersion as(String alias) {
        return new PdmanDbVersion(DSL.name(alias), this);
    }

    @Override
    public PdmanDbVersion as(Name alias) {
        return new PdmanDbVersion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PdmanDbVersion rename(String name) {
        return new PdmanDbVersion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PdmanDbVersion rename(Name name) {
        return new PdmanDbVersion(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
